---
apiVersion: v1
kind: Pod
metadata:
  name: frontend
  labels:
    component: frontend
spec:
  containers:
    - name: frontend
      image: rkalluru/frontend
#      ports:
#        - containerPort: 80
#          hostPort: 8086

# App can be accessed bu using host port  8086
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-roboshop
spec:
  type: NodePort
  selector:
    component: frontend
  ports:
    - protocol: TCP
     # service port
      port: 80
  # nginx port i.e., port of nginx in pod
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: user
  labels:
    component: user
spec:
  containers:
    - name: user
      image: rkalluru/user
---
apiVersion: v1
kind: Service
metadata:
  name: user-roboshop
spec:
  selector:
    component: user
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: cart
  labels:
    component: cart
spec:
  containers:
    - name: cart
      image: rkalluru/cart
---
apiVersion: v1
kind: Service
metadata:
  name: cart-roboshop
spec:
  selector:
    component: cart
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: catalogue
#  labels:
#    component: catalogue
#spec:
#  containers:
#    - name: catalogue
#      image: rkalluru/catalogue
#      env:
#        - name: DOCUMENTDB
#          value: "true"
#        - name: MONGO_URL
#          # AWS paramter value of prod.catalogue.DOCDB_URL
#          # Also allow manually the access to docdb in security group by adding 10.100.0.0/16
#          value: "mongodb://admin1:RoboShop123@prod-docdb-cluster.cluster-cmoi2t1a1os3.us-east-1.docdb.amazonaws.com:27017/catalogue?tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: catalogue
  # Replica set labels
  labels:
    component: catalogue
spec:
  replicas: 4
  selector:
    # selector labels for pods, Meaning pods are attached to replica set like svc in replica set using these selectors
    matchLabels:
      component: catalogue
  template:
    metadata:
      # Pod labels
      labels:
        component: catalogue
    spec:
      containers:
        - name: catalogue
          image: rkalluru/catalogue
          env:
            - name: DOCUMENTDB
              value: "true"
            - name: MONGO_URL
              value: "mongodb://admin1:RoboShop123@prod-docdb-cluster.cluster-cmoi2t1a1os3.us-east-1.docdb.amazonaws.com:27017/catalogue?tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-roboshop
spec:
  selector:
    component: catalogue
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: payment
  labels:
    component: payment
spec:
  containers:
    - name: payment
      image: rkalluru/payment
---
apiVersion: v1
kind: Service
metadata:
  name: payment-roboshop
spec:
  selector:
    component: payment
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Pod
metadata:
  name: shipping
  labels:
    component: shipping
spec:
  containers:
    - name: shipping
      image: rkalluru/shipping
---
apiVersion: v1
kind: Service
metadata:
  name: shipping-roboshop
spec:
  selector:
    component: shipping
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080